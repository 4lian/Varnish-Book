=version $Id: esi.pds,v 1.6 2005-12-19 13:06:51 lars Exp $
=topic Troubleshooting

=slide Troubleshooting - some tips

<ul>
  <li>The importance of workspaces</li>
  <li>What to edit where</li>
</ul>

=teacher

<p>workspaces need to be large enough, but no larger.  Takes practice to
find out.</p>

<p>make sure to never ever edit objects outside of vcl_fetch.</p>

=comments

<p>The obj_workspace should be large enough to able to contain changes you
make in vcl_fetch. Keeping obj_workspace small reduces the memory-overhead
for each object you store, and is reasonably safe.</p>

<p>The sess_workspace should be large enough to contain changes made to
anything else. That includes changes made in vcl_recv and vcl_deliver.
ESI also uses session workspace, and there is frequently a need to increase
this drastically if recursive ESI is used.</p>

<p>With heavy ESI, it might be necessary to set sess_workspace in the range of
megabytes. This means that with, for instance, 10 000 sessions running, you
will use obj_workspace * 10 000 sessions virtual memory. It is important to
remember that since the actual memory usage for each session is not going
to be close to the maximum, you will - for the most part - just be using
virtual memory, not physical memory.</p>

<p>To modify parameters, you will either use /etc/sysconfig/varnish
(Red Hat) or /etc/defaults/varnish (Debian/Ubuntu). These are used by the
init scripts provided for their respective distributions.</p>

=slide Troubleshooting - Common pitfalls

<ul>
  <li>Ignoring syslog</li>
  <li>Exaggerated tuning</li>
  <li>Changing the object in vcl_hit</li>
  <li>Not using session_linger</li>
  <li>Running out of file descriptors</li>
  <li>Using a 32bit system</li>
  <li>Incorrect or insufficient ulimits</li>
  <li>Setting lru_interval too high</li>
</ul>

=teacher

The idea here is to stress that you should keep things as simple as
possible, and use 64bit.

See the Performance-page on the wiki ahead of time.

=comments

<p>Varnish does extensive sanity checks on run-time, and will throw an error
at the first indication that something isn't as it should be. All these
errors are logged to syslog, either in /var/log/messages (redhat) or
/var/log/syslog (debian). After an error has been thrown, the management
thread will restart the caching threads immediately, which will leave
uptime almost unaffected.</p>

<p>There are essentially three types of issues that are very common. Trying to
tune Varnish too much can often lead to misunderstood tuning options, a
good example is that many people set lru_interval to 3600, which can be
harmful. The second issue is running out of session workspace. Lastly, is
using a non-standard system.</p>

<p>If you can, you should use the provided startup scripts, run Varnish on
either Red Hat Enterprise Linux, Debian, Ubuntu or Freebsd, based on a
64bit architecture. These are well tested setups which are known to be
stable for Varnish.</p>

<p>If you do run into an assert error, the best place to look for help is
the bugtracker at http://varnish.projects.linpro.no. Most of the assert
errors that can be resolved with configuration are already explained in a
ticket, so a quick search for the function-name will often yield the answer
to your problem.</p>
