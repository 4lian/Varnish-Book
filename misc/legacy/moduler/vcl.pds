=version $Id$
=topic VCL
=slide VCL - summary

<ul>
	<li>Syntax borrowed from C and Perl</li>
	<li>Domain-specific</li>
	<li>Flexible</li>
	<li>Fast</li>
	<li>No loops, no variables</li>
</ul>

=slide VCL - Backend declaration

<pre>
backend default {
        .host = "127.0.0.1";
        .port = "8080";
}
</pre>

=slide VCL - syntax

<ul>
    <li># and /* foo */ for comments</li>
    <li>sub $name functions</li>
    <li>No variables (almost true)</li>
    <li>Terminating statements, no return values</li>
</ul>

=slide VCL - function flow

<img src="bilder/vcl.png" height="500" />

=slide VCL - vcl_recv

<pre>
sub vcl_recv {
    if (req.request != "GET" &&
      req.request != "HEAD" &&
      req.request != "PUT" &&
      req.request != "POST" &&
      req.request != "TRACE" &&
      req.request != "OPTIONS" &&
      req.request != "DELETE") {
        /* Non-RFC2616 or CONNECT which is weird. */
        pipe;
    }
    if (req.request != "GET" && req.request != "HEAD") {
        /* We only deal with GET and HEAD by default */
        pass;
    }
    if (req.http.Authorization || req.http.Cookie) {
        /* Not cacheable by default */
        pass;
    }
    lookup;
}
</pre>

=slide VCL - vcl_recv - return codes

<ul>
    <li>error $code [reason]</li>
    <li>pass</li>
    <li>pipe</li>
    <li>lookup</li>
</ul>

=slide VCL - vcl_hash

<pre>
sub vcl_hash {
    set req.hash += req.url;
    if (req.http.host) {
        set req.hash += req.http.host;
    } else {
        set req.hash += server.ip;
    }
    hash;
}
</pre>

=slide VCL - vcl_hit

<pre>
sub vcl_hit {
    if (!obj.cacheable) {
        pass;
    }
    deliver;
}
</pre>

=slide VCL - vcl_miss

<pre>
sub vcl_miss {
    fetch;
}
</pre>

=slide VCL - vcl_fetch

<pre>
    if (!obj.cacheable) {
        pass;
    }
    if (obj.http.Set-Cookie) {
        pass;
    }
    set obj.prefetch =  -30s;
    deliver;
</pre>

=slide VCL - vcl_deliver

<pre>
sub vcl_deliver {
    deliver;
}
</pre>

=slide VCL - vcl_error

<pre>
sub vcl_error {
    set obj.http.Content-Type = "text/html; charset=utf-8";
    synthetic {"
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;"} obj.status " " obj.response {"&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Error "} obj.status " " obj.response {"&lt;/h1&gt;
    &lt;p&gt;"} obj.response {"&lt;/p&gt;
    &lt;h3&gt;Guru Meditation:&lt;/h3&gt;
    &lt;p&gt;XID: "} req.xid {"&lt;/p&gt;
    &lt;address&gt;
       &lt;a href="http://www.varnish-cache.org/"&gt;Varnish&lt;/a&gt;
    &lt;/address&gt;
  &lt;/body&gt;
&lt;/html&gt;
"};
    deliver;
}
</pre>

=slide VCL - functions

<ul>
  <li>regsub(str, regex, sub)</li>
  <li>regsuball(str, regex, sub)</li>
  <li>purge_hash(regex)</li>
  <li>purge_url(regex)</li>
  <li>purge(expression)</li>
  <li>restart</li>
</ul>

=slide VCL - variables

<ul>
  <li>req.* - request</li>
  <li>req.http.* - request HTTP headers</li>
  <li>req.backend - which backend to use</li>
  <li>obj.* - object</li>
  <li>obj.http.* - object HTTP headers</li>
  <li>obj.ttl - lifetime of the object</li>
  <li>obj.status - HTTP status code</li>
  <li>resp.* - response</li>
  <li>resp.http.* - response HTTP headers</li>
</ul>
